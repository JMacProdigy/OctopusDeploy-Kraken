requirejs.config({paths:{html:"../html",text:"../lib/text/text",cmdr:"../lib/cmdrjs/dist/cmdr",jquery:"../lib/jquery/dist/jquery",knockout:"../lib/knockout/dist/knockout",bootstrap:"../lib/bootstrap/dist/js/bootstrap",moment:"../lib/moment/moment"}}),define("context",window.appContext),requirejs(["knockout","componentLoader","shell"],function(e){e.applyBindings()}),define(function(){return{topics:{},subscribe:function(e,t){this.topics[e]||(this.topics[e]=[]),this.topics[e].push(t)},unsubscribe:function(e,t){if(this.topics[e]){var n=this.topics[e].indexOf(t);-1!==n&&this.topics[e].splice(n,1)}},publish:function(e,t){!this.topics[e]||this.topics[e].length<1||this.topics[e].forEach(function(e){e(t||{})})}}}),define(["knockout"],function(e){e.components.loaders.unshift({getConfig:function(e,t){t({viewModel:{require:e},template:{require:"text!html/"+e+".html"}})},loadTemplate:function(t,n,i){n.require?require([n.require],function(n){e.components.defaultLoader.loadViewModel(t,n,i)}):i(null)},loadViewModel:function(t,n,i){n.require?require([n.require],function(n){e.components.defaultLoader.loadTemplate(t,n,i)}):i(null)}})}),define(["cmdr","commands/definitionProvider","commands/autocompleteProvider","commands/commandHandler"],function(e,t,n,i){return new e.OverlayShell({definitionProvider:t,autocompleteProvider:n,commandHandler:i})}),define(["cmdr","bus","commands/definitionProvider","services/releaseBatches","services/projects","services/environments"],function(e,t,n,i,s,r){function a(e,t){if(!t.parsed.name)return!1;var i=n.getDefinitions(t.parsed.name);if(1!==i.length)return!1;var s=i[0].autocompleteKeys;return s?s[t.parsed.args.length]===e:!1}function o(e){return e.map(function(e){var t=e.name;return t.indexOf(" ")>-1&&(t='"'+t+'"'),t})}function c(e){return a("releaseBatches",e)?(u||(u=i.getReleaseBatches().then(o)),u):null}function l(){u=null}function h(e){return a("projects",e)?(d||(d=s.getProjects().then(o)),d):null}function $(e){return a("environments",e)?(m||(m=r.getEnvironments().then(o)),m):null}var u=null;t.subscribe("releasebatches:add",l),t.subscribe("releasebatches:update",l),t.subscribe("releasebatches:delete",l);var d=null,m=null,f=new e.AutocompleteProvider;return f.lookups.push(c),f.lookups.push(h),f.lookups.push($),f}),define(["cmdr","moment","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"BATCH",description:"Lists all release batches or lists all projects linked to a batch.",usage:"BATCH/nBATCH [batchIdOrName]",main:function(e){return e?n.getReleaseBatch(e).then(function(e){this.shell.writeLine(e.name),this.shell.writeLine(),this.shell.writeTable(e.items,["projectId:20:project id","projectName:50:project name","releaseVersion:*:release version"],!0),this.shell.writeLine(),e.updateDateTime&&this.shell.writeLine("Last updated by "+e.updateUserName+" at "+t(e.updateDateTime).format("l LTS")),e.syncDateTime&&this.shell.writeLine("Last synced to "+e.syncEnvironmentName+" by "+e.syncUserName+" at "+t(e.syncDateTime).format("l LTS")),e.deployDateTime&&this.shell.writeLine("Last deployed to "+e.deployEnvironmentName+" by "+e.deployUserName+" at "+t(e.deployDateTime).format("l LTS"))}.bind(this)).fail(this.fail.bind(this)):n.getReleaseBatches().then(function(e){this.shell.writeLine("Release batches:"),this.shell.writeLine();var n=e.map(function(e){return e.displaySyncDateTime=e.syncDateTime?t(e.syncDateTime).format("l LTS"):"",e.displayDeployDateTime=e.deployDateTime?t(e.deployDateTime).format("l LTS"):"",e});this.shell.writeTable(n,["id:10","name:30","syncEnvironmentName:15:sync env","displaySyncDateTime:25:sync timestamp","deployEnvironmentName:15:deploy env","displayDeployDateTime:*:deploy timestamp"],!0)}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),define(["cmdr"],function(e){return new e.CommandHandler({contextExtensions:{fail:function(e,t,n){n&&this.shell.writeLine(n,"error"),e.responseText&&this.shell.writeLine(e.responseText,"error"),this.shell.writeLine("Operation Failed","error")}}})}),define(["cmdr","commands/env","commands/proj","commands/batch","commands/mkbatch","commands/renbatch","commands/rmbatch","commands/linkproj","commands/unlinkproj","commands/syncbatch","commands/deploybatch","commands/nubatch"],function(e){for(var t=new e.DefinitionProvider,n=1,i=arguments.length;i>n;n++)t.addDefinition(arguments[n]);return t}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"DEPLOYBATCH",description:"Deploys all items in a release batch",usage:"DEPLOYBATCH batchIdOrName environmentIdOrName [allowRedeploy]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n,i){return e&&n?t.deployReleaseBatch(e,n,!!i).then(function(e){return this.shell.writeLine(),this.shell.writeLine("                $$$$$$$"),this.shell.writeLine("            $$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$O$$$$$    $$$$$$"),this.shell.writeLine("       $$$$$$$$O$$$$$$$$$$$$   $$$  $$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$$$$$$  $$$$    $$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine(" $$$$$$     $$$$$$$$$$$$$$$$$$        $$"),this.shell.writeLine("$$   $$$$$$$$$$$$$$$$$$$$$$$         $$"),this.shell.writeLine(" $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("     $$$$$$$$  $$$ $$$$$$          $$"),this.shell.writeLine("   $$$$       $$$  $$$ $$$      $$$$"),this.shell.writeLine("  $$$       $$$$   $$$  $$$"),this.shell.writeLine("   $$$$$   $$$     $$$   $$$$    $$"),this.shell.writeLine("    $$$    $$$$$$  $$$    $$$$$$$$"),this.shell.writeLine("            $$$     $$$$$   $$$$"),this.shell.writeLine(),this.shell.writeLine("         RELEASE THE KRAKEN!"),this.shell.writeLine(),this.shell.writeLine("Release batch deploys started.  Check Octopus for status.","success"),e}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and environment id or name required","error")},autocompleteKeys:["releaseBatches","environments"]})}),define(["cmdr","services/environments"],function(e,t){return new e.Definition({name:"ENV",description:"Lists all Octopus environments.",main:function(){var e=new commandHelper(this);return t.getEnvironments().then(function(e){this.shell.writeLine("Octopus environments:"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","name:*"],!0)}.bind(this)).fail(e.fail)}})}),define(["cmdr","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"LINKPROJ",description:"Links an Octopus project to a release batch.",usage:"LINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){return e&&n?t.linkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and project id or slug or name required","error")},autocompleteKeys:["releaseBatches","projects"]})}),define(["cmdr"],function(e){return new e.Definition({name:"LOGOUT",description:"Logout of Kraken.",main:function(){var e=this.defer();return this.shell.write("Are you sure you want to logout of Kraken? ","warning"),this.shell.readLine(function(t){return"y"!==t.toLowerCase()?void e.resolve():(document.location=app.basePath+"logout",void e.resolve())}.bind(this)),e}})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"MKBATCH",description:"Creates a new release batch.",usage:"MKBATCH name",main:function(e){return e?t.postReleaseBatch({name:e}).then(function(e){this.shell.writeLine("Batch created","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch name required","error")}})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"NUBATCH",description:"Makes a new release for every project in a batch from the latest nuget packages.",usage:"NUBATCH batchIdOrName [version]",main:function(e,n){return e?t.createReleases(e,n).then(function(e){return this.shell.writeLine("Releases created and batch synced with latest","success"),e}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name required","error")},autocompleteKeys:["releaseBatches"]})}),define(["cmdr","services/projects"],function(e,t){return new e.Definition({name:"PROJ",description:"List Octopus projects, optionally filtered by name.",usage:"PROJ [nameFilter]",main:function(e){return t.getProjects(e).then(function(e){this.shell.writeLine("Octopus projects"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","slug:50","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RENBATCH",description:"Renames a release batch.",usage:"RENBATCH batchIdOrName newName",main:function(e,n){return e&&n?t.putReleaseBatch(e,{name:n}).then(function(){this.shell.writeLine("Batch updated","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch id or name and new name required","error")},autocompleteKeys:["releaseBatches"]})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RMBATCH",description:"Deletes a release batch by id.",usage:"RMBATCH batchIdOrName",main:function(e){if(!e)return void this.shell.writeLine("Project batch id or name required","error");var n=this.defer();return this.shell.write("Are you sure you want to delete this release batch (y/n)? ","warning"),this.shell.readLine(function(i){return"y"!==i.toLowerCase()?void n.resolve():void t.deleteReleaseBatch(e).then(function(){this.shell.writeLine("Release batch deleted","success"),n.resolve()}.bind(this)).fail(function(e,t,i){this.fail(e,t,i),n.resolve()}.bind(this))}.bind(this)),n},autocompleteKeys:["releaseBatches"]})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"SYNCBATCH",description:"Syncs up a release batch with releases from Octopus.",usage:"SYNCBATCH batchIdOrName [environmentIdOrName]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n){return e?t.syncReleaseBatch(e,n).then(function(e){return this.shell.writeLine("Release batch synced","success"),e}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name required","error")},autocompleteKeys:["releaseBatches","environments"]})}),define(["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UNLINKPROJ",description:"Unlinks an Octopus project from a release batch.",usage:"UNLINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){return e&&n?t.unlinkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and project id or slug or name required","error")},autocompleteKeys:["releaseBatches","projects"]})}),define(["jquery","context"],function(e,t){return{getEnvironments:function(){return e.get(t.basePath+"api/environments")}}}),define(["jquery","context"],function(e,t){return{getProjects:function(n){return e.get(t.basePath+"api/projects",{nameFilter:n})}}}),define(["jquery","bus","context"],function(e,t,n){return{getReleaseBatches:function(){return e.get(n.basePath+"api/releasebatches")},getReleaseBatch:function(t){return e.get(n.basePath+"api/releasebatches/"+encodeURI(t))},postReleaseBatch:function(i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches",data:JSON.stringify(i),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:add",e.id),e})},putReleaseBatch:function(i,s){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i),data:JSON.stringify(s),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",i),e})},deleteReleaseBatch:function(i){return e.ajax({url:n.basePath+"api/releasebatches/"+encodeURI(i),type:"DELETE"}).then(function(e){return t.publish("releasebatches:delete",i),e})},linkProject:function(i,s){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/linkproject",data:JSON.stringify(s),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",i)})},unlinkProject:function(i,s){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/unlinkproject",data:JSON.stringify(s),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",i)})},syncReleaseBatch:function(i,s){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/sync",data:JSON.stringify(s),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",i)})},deployReleaseBatch:function(i,s){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/deploy",data:JSON.stringify(s),contentType:"application/json"}).then(function(){t.publish("releasebatches:deploy",i)})},createReleases:function(i,s){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/createreleases",data:JSON.stringify(s),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",i)})}}}),define(["knockout","bootstrap","shell","services/releaseBatches","services/environments"],function(e,t,n,i,s){return function(t){this.releaseBatch=e.observable(),this.environments=e.observableArray();var r=this.releaseBatch;this.loadReleaseBatch=function(){i.getReleaseBatch(t.id).then(function(e){this.releaseBatch(e)}.bind(this))}.bind(this),this.loadEnvironments=function(){s.getEnvironments().then(function(e){this.environments(e)}.bind(this))}.bind(this),this.deploy=function(e){n.execute("DEPLOYBATCH",t.id,e.id)}.bind(this),this.sync=function(e){n.execute("SYNCBATCH",t.id,e.id).then(function(e){r(e)})}.bind(this),this.loadReleaseBatch(),this.loadEnvironments()}}),define(["knockout","bus","services/releaseBatches","context"],function(e,t,n,i){return function(s){this.releaseBatches=e.observableArray();var r=function(e){return e.viewUrl=i.basePath+"app/releasebatches/details?id="+e.id,e},a=function(){n.getReleaseBatches().then(function(e){this.releaseBatches($.map(e,r))}.bind(this))}.bind(this);t.subscribe("releasebatches:add",a),t.subscribe("releasebatches:update",a),t.subscribe("releasebatches:delete",a),a()}});