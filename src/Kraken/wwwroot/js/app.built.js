(function(){var e,t,n;(function(r){function v(e,t){return h.call(e,t)}function m(e,t){var n,r,i,s,o,u,a,f,c,h,p,v=t&&t.split("/"),m=l.map,g=m&&m["*"]||{};if(e&&e.charAt(0)===".")if(t){e=e.split("/"),o=e.length-1,l.nodeIdCompat&&d.test(e[o])&&(e[o]=e[o].replace(d,"")),e=v.slice(0,v.length-1).concat(e);for(c=0;c<e.length;c+=1){p=e[c];if(p===".")e.splice(c,1),c-=1;else if(p===".."){if(c===1&&(e[2]===".."||e[0]===".."))break;c>0&&(e.splice(c-1,2),c-=2)}}e=e.join("/")}else e.indexOf("./")===0&&(e=e.substring(2));if((v||g)&&m){n=e.split("/");for(c=n.length;c>0;c-=1){r=n.slice(0,c).join("/");if(v)for(h=v.length;h>0;h-=1){i=m[v.slice(0,h).join("/")];if(i){i=i[r];if(i){s=i,u=c;break}}}if(s)break;!a&&g&&g[r]&&(a=g[r],f=c)}!s&&a&&(s=a,u=f),s&&(n.splice(0,u,s),e=n.join("/"))}return e}function g(e,t){return function(){var n=p.call(arguments,0);return typeof n[0]!="string"&&n.length===1&&n.push(null),s.apply(r,n.concat([e,t]))}}function y(e){return function(t){return m(t,e)}}function b(e){return function(t){a[e]=t}}function w(e){if(v(f,e)){var t=f[e];delete f[e],c[e]=!0,i.apply(r,t)}if(!v(a,e)&&!v(c,e))throw new Error("No "+e);return a[e]}function E(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function S(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice,d=/\.js$/;o=function(e,t){var n,r=E(e),i=r[0];return e=r[1],i&&(i=m(i,t),n=w(i)),i?n&&n.normalize?e=n.normalize(e,y(t)):e=m(e,t):(e=m(e,t),r=E(e),i=r[0],e=r[1],i&&(n=w(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:n}},u={require:function(e){return g(e)},exports:function(e){var t=a[e];return typeof t!="undefined"?t:a[e]={}},module:function(e){return{id:e,uri:"",exports:a[e],config:S(e)}}},i=function(e,t,n,i){var s,l,h,p,d,m=[],y=typeof n,E;i=i||e;if(y==="undefined"||y==="function"){t=!t.length&&n.length?["require","exports","module"]:t;for(d=0;d<t.length;d+=1){p=o(t[d],i),l=p.f;if(l==="require")m[d]=u.require(e);else if(l==="exports")m[d]=u.exports(e),E=!0;else if(l==="module")s=m[d]=u.module(e);else if(v(a,l)||v(f,l)||v(c,l))m[d]=w(l);else{if(!p.p)throw new Error(e+" missing "+l);p.p.load(p.n,g(i,!0),b(l),{}),m[d]=a[l]}}h=n?n.apply(a[e],m):undefined;if(e)if(s&&s.exports!==r&&s.exports!==a[e])a[e]=s.exports;else if(h!==r||!E)a[e]=h}else e&&(a[e]=n)},e=t=s=function(e,t,n,a,f){if(typeof e=="string")return u[e]?u[e](t):w(o(e,t).f);if(!e.splice){l=e,l.deps&&s(l.deps,l.callback);if(!t)return;t.splice?(e=t,t=n,n=null):e=r}return t=t||function(){},typeof n=="function"&&(n=a,a=f),a?i(r,e,t,n):setTimeout(function(){i(r,e,t,n)},4),s},s.config=function(e){return s(e)},e._defined=a,n=function(e,t,n){if(typeof e!="string")throw new Error("See almond README: incorrect module build, no module name");t.splice||(n=t,t=[]),!v(a,e)&&!v(f,e)&&(f[e]=[e,t,n])},n.amd={jQuery:!0}})(),n("../../node_modules/almond/almond",function(){}),n("componentLoader",["knockout"],function(e){e.components.loaders.unshift({getConfig:function(e,t){t({viewModel:{require:e},template:{require:"text!html/"+e+".html"}})},loadTemplate:function(n,r,i){r.require?t([r.require],function(t){e.components.defaultLoader.loadViewModel(n,t,i)}):i(null)},loadViewModel:function(n,r,i){r.require?t([r.require],function(t){e.components.defaultLoader.loadTemplate(n,t,i)}):i(null)}})}),n("services/environments",["jquery","context"],function(e,t){return{getEnvironments:function(){return e.get(t.basePath+"api/environments")}}}),n("commands/env",["cmdr","services/environments"],function(e,t){return new e.Definition({name:"ENV",description:"Lists all Octopus environments.",main:function(){var e=new commandHelper(this);return t.getEnvironments().then(function(e){this.shell.writeLine("Octopus environments:"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","name:*"],!0)}.bind(this)).fail(e.fail)}})}),n("services/projects",["jquery","context"],function(e,t){return{getProjects:function(n){return e.get(t.basePath+"api/projects",{nameFilter:n})}}}),n("commands/proj",["cmdr","services/projects"],function(e,t){return new e.Definition({name:"PROJ",description:"List Octopus projects, optionally filtered by name.",usage:"PROJ [nameFilter]",main:function(e){return t.getProjects(e).then(function(e){this.shell.writeLine("Octopus projects"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","slug:50","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),n("bus",[],function(){return{topics:{},subscribe:function(e,t){this.topics[e]||(this.topics[e]=[]),this.topics[e].push(t)},unsubscribe:function(e,t){if(!this.topics[e])return;var n=this.topics[e].indexOf(t);n!==-1&&this.topics[e].splice(n,1)},publish:function(e,t){if(!this.topics[e]||this.topics[e].length<1)return;this.topics[e].forEach(function(e){e(t||{})})}}}),n("services/releaseBatches",["jquery","bus","context"],function(e,t,n){return{getReleaseBatches:function(){return e.get(n.basePath+"api/releasebatches")},getReleaseBatch:function(t){return e.get(n.basePath+"api/releasebatches/"+encodeURI(t))},postReleaseBatch:function(r){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches",data:JSON.stringify(r),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:add",e.id),e})},putReleaseBatch:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r),data:JSON.stringify(i),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",r),e})},deleteReleaseBatch:function(r){return e.ajax({url:n.basePath+"api/releasebatches/"+encodeURI(r),type:"DELETE"}).then(function(e){return t.publish("releasebatches:delete",r),e})},linkProject:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/linkproject",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",r)})},unlinkProject:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/unlinkproject",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",r)})},syncReleaseBatch:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/sync",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",r)})},deployReleaseBatch:function(r,i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/deploy",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:deploy",r)})},createReleases:function(r,i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/createreleases",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",r)})}}}),n("commands/batch",["cmdr","moment","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"BATCH",description:"Lists all release batches or lists all projects linked to a batch.",usage:"BATCH/nBATCH [batchIdOrName]",main:function(e){return e?n.getReleaseBatch(e).then(function(e){this.shell.writeLine(e.name),this.shell.writeLine(),this.shell.writeTable(e.items,["projectId:20:project id","projectName:50:project name","releaseVersion:*:release version"],!0),this.shell.writeLine(),e.updateDateTime&&this.shell.writeLine("Last updated by "+e.updateUserName+" at "+t(e.updateDateTime).format("l LTS")),e.syncDateTime&&this.shell.writeLine("Last synced to "+e.syncEnvironmentName+" by "+e.syncUserName+" at "+t(e.syncDateTime).format("l LTS")),e.deployDateTime&&this.shell.writeLine("Last deployed to "+e.deployEnvironmentName+" by "+e.deployUserName+" at "+t(e.deployDateTime).format("l LTS"))}.bind(this)).fail(this.fail.bind(this)):n.getReleaseBatches().then(function(e){this.shell.writeLine("Release batches:"),this.shell.writeLine();var n=e.map(function(e){return e.displaySyncDateTime=e.syncDateTime?t(e.syncDateTime).format("l LTS"):"",e.displayDeployDateTime=e.deployDateTime?t(e.deployDateTime).format("l LTS"):"",e});this.shell.writeTable(n,["id:10","name:30","syncEnvironmentName:15:sync env","displaySyncDateTime:25:sync timestamp","deployEnvironmentName:15:deploy env","displayDeployDateTime:*:deploy timestamp"],!0)}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),n("commands/mkbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"MKBATCH",description:"Creates a new release batch.",usage:"MKBATCH name",main:function(e){if(!e){this.shell.writeLine("Project batch name required","error");return}return t.postReleaseBatch({name:e}).then(function(e){this.shell.writeLine("Batch created","success")}.bind(this)).fail(this.fail.bind(this))}})}),n("commands/renbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RENBATCH",description:"Renames a release batch.",usage:"RENBATCH batchIdOrName newName",main:function(e,n){if(!e||!n){this.shell.writeLine("Project batch id or name and new name required","error");return}return t.putReleaseBatch(e,{name:n}).then(function(){this.shell.writeLine("Batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),n("commands/rmbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RMBATCH",description:"Deletes a release batch by id.",usage:"RMBATCH batchIdOrName",main:function(e){if(!e){this.shell.writeLine("Project batch id or name required","error");return}var n=this.defer();return this.shell.write("Are you sure you want to delete this release batch (y/n)? ","warning"),this.shell.readLine(function(r){if(r.toLowerCase()!=="y"){n.resolve();return}t.deleteReleaseBatch(e).then(function(){this.shell.writeLine("Release batch deleted","success"),n.resolve()}.bind(this)).fail(function(e,t,r){this.fail(e,t,r),n.resolve()}.bind(this))}.bind(this)),n},autocompleteKeys:["releaseBatches"]})}),n("commands/linkproj",["cmdr","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"LINKPROJ",description:"Links an Octopus project to a release batch.",usage:"LINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){if(!e||!n){this.shell.writeLine("Batch id or name and project id or slug or name required","error");return}return t.linkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","projects"]})}),n("commands/unlinkproj",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UNLINKPROJ",description:"Unlinks an Octopus project from a release batch.",usage:"UNLINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){if(!e||!n){this.shell.writeLine("Batch id or name and project id or slug or name required","error");return}return t.unlinkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","projects"]})}),n("commands/syncbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"SYNCBATCH",description:"Syncs up a release batch with releases from Octopus.",usage:"SYNCBATCH batchIdOrName [environmentIdOrName]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n){if(!e){this.shell.writeLine("Batch id or name required","error");return}return t.syncReleaseBatch(e,n).then(function(e){return this.shell.writeLine("Release batch synced","success"),e}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","environments"]})}),n("commands/deploybatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"DEPLOYBATCH",description:"Deploys all items in a release batch",usage:"DEPLOYBATCH batchIdOrName environmentIdOrName [allowRedeploy]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n,r){if(!e||!n){this.shell.writeLine("Batch id or name and environment id or name required","error");return}return t.deployReleaseBatch(e,n,!!r).then(function(e){return this.shell.writeLine(),this.shell.writeLine("                $$$$$$$"),this.shell.writeLine("            $$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$O$$$$$    $$$$$$"),this.shell.writeLine("       $$$$$$$$O$$$$$$$$$$$$   $$$  $$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$$$$$$  $$$$    $$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine(" $$$$$$     $$$$$$$$$$$$$$$$$$        $$"),this.shell.writeLine("$$   $$$$$$$$$$$$$$$$$$$$$$$         $$"),this.shell.writeLine(" $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("     $$$$$$$$  $$$ $$$$$$          $$"),this.shell.writeLine("   $$$$       $$$  $$$ $$$      $$$$"),this.shell.writeLine("  $$$       $$$$   $$$  $$$"),this.shell.writeLine("   $$$$$   $$$     $$$   $$$$    $$"),this.shell.writeLine("    $$$    $$$$$$  $$$    $$$$$$$$"),this.shell.writeLine("            $$$     $$$$$   $$$$"),this.shell.writeLine(),this.shell.writeLine("         RELEASE THE KRAKEN!"),this.shell.writeLine(),this.shell.writeLine("Release batch deploys started.  Check Octopus for status.","success"),e}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","environments"]})}),n("commands/nubatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"NUBATCH",description:"Makes a new release for every project in a batch from the latest nuget packages.",usage:"NUBATCH batchIdOrName [version]",main:function(e,n){if(!e){this.shell.writeLine("Batch id or name required","error");return}return t.createReleases(e,n).then(function(e){return this.shell.writeLine("Releases created and batch synced with latest","success"),e}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),n("commands/definitionProvider",["cmdr","commands/env","commands/proj","commands/batch","commands/mkbatch","commands/renbatch","commands/rmbatch","commands/linkproj","commands/unlinkproj","commands/syncbatch","commands/deploybatch","commands/nubatch"],function(e){var t=new e.DefinitionProvider;for(var n=1,r=arguments.length;n<r;n++)t.addDefinition(arguments[n]);return t}),n("commands/autocompleteProvider",["cmdr","bus","commands/definitionProvider","services/releaseBatches","services/projects","services/environments"],function(e,t,n,r,i,s){function o(e,t){if(!t.parsed.name)return!1;var r=n.getDefinitions(t.parsed.name);if(r.length!==1)return!1;var i=r[0].autocompleteKeys;return i?i[t.parsed.args.length]===e:!1}function u(e){return e.map(function(e){var t=e.name;return t.indexOf(" ")>-1&&(t='"'+t+'"'),t})}function f(e){return o("releaseBatches",e)?(a||(a=r.getReleaseBatches().then(u)),a):null}function l(){a=null}function h(e){return o("projects",e)?(c||(c=i.getProjects().then(u)),c):null}function d(e){return o("environments",e)?(p||(p=s.getEnvironments().then(u)),p):null}var a=null;t.subscribe("releasebatches:add",l),t.subscribe("releasebatches:update",l),t.subscribe("releasebatches:delete",l);var c=null,p=null,v=new e.AutocompleteProvider;return v.lookups.push(f),v.lookups.push(h),v.lookups.push(d),v}),n("commands/commandHandler",["cmdr"],function(e){return new e.CommandHandler({contextExtensions:{fail:function(e,t,n){n&&this.shell.writeLine(n,"error"),e.responseText&&this.shell.writeLine(e.responseText,"error"),this.shell.writeLine("Operation Failed","error")}}})}),n("shell",["cmdr","commands/definitionProvider","commands/autocompleteProvider","commands/commandHandler"],function(e,t,n,r){return new e.OverlayShell({definitionProvider:t,autocompleteProvider:n,commandHandler:r})}),e.config({paths:{html:"../html",jquery:["//ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min","../lib/jquery/dist/jquery.min"],knockout:["//ajax.aspnetcdn.com/ajax/knockout/knockout-3.4.0","../lib/knockout/dist/knockout"],bootstrap:["//ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/bootstrap.min","../lib/bootstrap/dist/js/bootstrap.min"],cmdr:"../lib/cmdrjs/dist/cmdr.min",moment:"../lib/moment/min/moment.min",text:"../lib/text/text"}}),n("context",window.appContext),e(["knockout","componentLoader","shell"],function(e){e.applyBindings()}),n("app",function(){}),n("text",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),n("text!html/views/releasebatches/details.html",[],function(){return'<div class="hint">\r\n    <div class="alert alert-info" role="alert">\r\n        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n        <span class="glyphicon glyphicon-console"></span>&nbsp;&nbsp;Manage release batches with the command console by pressing the ( `/~ ) key.\r\n    </div>\r\n</div>\r\n\r\n<div class="view" data-bind="with: releaseBatch">\r\n    <header class="view__header page-header">\r\n\r\n        <div class="pull-right">\r\n            <div class="btn-group">\r\n                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    Sync <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu" data-bind="foreach: $parent.environments">\r\n                    <li><a href="#" data-bind="text: name, click: $component.sync"></a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class="btn-group">\r\n                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    Deploy <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu" data-bind="foreach: $parent.environments">\r\n                    <li><a href="#" data-bind="text: name, click: $component.deploy"></a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <h1 data-bind="text: name"></h1>\r\n    </header>\r\n\r\n    <div class="view__body">\r\n\r\n       \r\n        \r\n        <ul data-bind="foreach: items">\r\n            <li>\r\n                <span data-bind="text: projectName"></span>\r\n                <span data-bind="text: releaseVersion"></span>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n</div>\r\n'}),n("text!html/views/releasebatches/index.html",[],function(){return'<div class="hint">\n    <div class="alert alert-info" role="alert">\n        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n        <span class="glyphicon glyphicon-console"></span>&nbsp;&nbsp;Manage release batches with the command console by pressing the ( `/~ ) key.\n    </div>\n</div>\n\n<div class="view">\n    <header class="view__header page-header">\n        <h1>Release Batches</h1>\n    </header>\n    <section class="view__body">\n        <ul class="release-batch-list" data-bind="foreach: releaseBatches">\n            <li class="release-batch-list__item">\n                <h3>\n                    <a data-bind="text: name, attr: { href: viewUrl }"></a>\n                </h3>\n            </li>\n        </ul>\n    </section>\n</div>'})})();