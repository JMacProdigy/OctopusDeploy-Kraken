!function(){define("componentLoader",["knockout"],function(e){e.components.loaders.unshift({getConfig:function(e,t){t({viewModel:{require:e},template:{require:"text!html/"+e+".html"}})},loadTemplate:function(t,n,i){n.require?require([n.require],function(n){e.components.defaultLoader.loadViewModel(t,n,i)}):i(null)},loadViewModel:function(t,n,i){n.require?require([n.require],function(n){e.components.defaultLoader.loadTemplate(t,n,i)}):i(null)}})}),define("services/environments",["jquery","context"],function(e,t){return{getEnvironments:function(n){return e.get(t.basePath+"api/environments",{permission:n})}}}),define("commands/env",["cmdr","services/environments"],function(e,t){return new e.Definition({name:"ENV",description:"Lists all Octopus environments.",main:function(){return t.getEnvironments().then(function(e){this.shell.writeLine("Octopus environments:"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),define("services/projects",["jquery","context"],function(e,t){return{getProjects:function(n){return e.get(t.basePath+"api/projects",{nameFilter:n})}}}),define("commands/proj",["cmdr","services/projects"],function(e,t){return new e.Definition({name:"PROJ",description:"List Octopus projects, optionally filtered by name.",usage:"PROJ [nameFilter]",main:function(e){return t.getProjects(e).then(function(e){this.shell.writeLine("Octopus projects"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","slug:50","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),define("bus",[],function(){return{topics:{},subscribe:function(e,t){this.topics[e]||(this.topics[e]=[]),this.topics[e].push(t)},unsubscribe:function(e,t){if(this.topics[e]){var n=this.topics[e].indexOf(t);n!==-1&&this.topics[e].splice(n,1)}},publish:function(e,t){!this.topics[e]||this.topics[e].length<1||this.topics[e].forEach(function(e){e(t||{})})}}}),define("services/releaseBatches",["jquery","bus","context"],function(e,t,n){return{getReleaseBatches:function(){return e.get(n.basePath+"api/releasebatches")},getReleaseBatch:function(t){return e.get(n.basePath+"api/releasebatches/"+encodeURI(t))},postReleaseBatch:function(i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches",data:JSON.stringify(i),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:add",e.id),e})},putReleaseBatch:function(i,a){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i),data:JSON.stringify(a),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",i),e})},putReleaseBatchLogo:function(i,a){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/logo",data:JSON.stringify(a),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",i),e})},deleteReleaseBatch:function(i){return e.ajax({url:n.basePath+"api/releasebatches/"+encodeURI(i),type:"DELETE"}).then(function(e){return t.publish("releasebatches:delete",i),e})},copyReleaseBatch:function(i,a){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/copy",data:JSON.stringify(a),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:add",e.id),e})},linkProject:function(i,a,s){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/linkproject",data:JSON.stringify({projectIdOrSlugOrName:a,releaseVersion:s}),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",i)})},unlinkProject:function(i,a){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/unlinkproject",data:JSON.stringify(a),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",i)})},syncReleaseBatch:function(i,a){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/sync",data:JSON.stringify(a),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",i)})},deployReleaseBatch:function(i,a,s){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/deploy?forceRedeploy="+!!s,data:JSON.stringify(a),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:deploy",i),e})},createReleases:function(i,a){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/createreleases",data:JSON.stringify(a),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",i)})},previewReleases:function(t){return e.ajax({type:"GET",url:n.basePath+"api/releasebatches/"+encodeURI(t)+"/previewreleases",contentType:"application/json"})},getProgression:function(t){return e.ajax({type:"GET",url:n.basePath+"api/releasebatches/"+encodeURI(t)+"/getprogression",traditional:!0,contentType:"application/json"})},getBatchEnvironments:function(t){return e.get(n.basePath+"api/releasebatches/"+encodeURI(t)+"/getbatchenvironments")},lockReleaseBatch:function(i,a){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/lockreleasebatch",data:JSON.stringify(a),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",i),e})},unlockReleaseBatch:function(i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(i)+"/unlockreleasebatch",contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",i),e})}}}),define("commands/batch",["cmdr","moment","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"BATCH",description:"Lists all release batches or lists all projects linked to a batch.",usage:"BATCH/nBATCH [batchIdOrName]",main:function(e){return e?n.getReleaseBatch(e).then(function(e){this.shell.writeLine(e.name),this.shell.writeLine(e.description),this.shell.writeLine(),this.shell.writeTable(e.items,["projectId:20:project id","projectName:50:project name","releaseVersion:*:release version"],!0),this.shell.writeLine(),e.updateDateTime&&this.shell.writeLine("Last updated by "+e.updateUserName+" at "+t(e.updateDateTime).format("l LTS")),e.syncDateTime&&this.shell.writeLine("Last synced to "+e.syncEnvironmentName+" by "+e.syncUserName+" at "+t(e.syncDateTime).format("l LTS")),e.deployDateTime&&this.shell.writeLine("Last deployed to "+e.deployEnvironmentName+" by "+e.deployUserName+" at "+t(e.deployDateTime).format("l LTS"))}.bind(this)).fail(this.fail.bind(this)):n.getReleaseBatches().then(function(e){this.shell.writeLine("Release batches:"),this.shell.writeLine();var n=e.map(function(e){return e.displaySyncDateTime=e.syncDateTime?t(e.syncDateTime).format("l LTS"):"",e.displayDeployDateTime=e.deployDateTime?t(e.deployDateTime).format("l LTS"):"",e});this.shell.writeTable(n,["id:10","name:30","syncEnvironmentName:15:sync env","displaySyncDateTime:25:sync timestamp","deployEnvironmentName:15:deploy env","displayDeployDateTime:*:deploy timestamp"],!0)}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),define("commands/mkbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"MKBATCH",description:"Creates a new release batch.",usage:"MKBATCH name [description]",main:function(e,n){return e?t.postReleaseBatch({name:e,description:n}).then(function(e){this.shell.writeLine("Batch created","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch name required","error")}})}),define("utils/imagePrompt",["jquery"],function(e){function t(e){var t=/^data:(.+\/.+);base64,(.*)$/,n=e.match(t);return{content:n[2],contentType:n[1]}}return function(){var n=e.Deferred(),i=e(document.body),a=e('<input type="file" accept="image/*" style="display: none" />');i.append(a),a.on("change",function(e){try{var i=e.target.files[0];if(!i)return void n.reject("No file");var a=new FileReader;a.onload=function(e){var i;try{i=t(e.target.result)}catch(e){return void n.reject(e)}n.resolve(i)},a.readAsDataURL(i)}catch(e){n.reject(e)}});var s=document.body.onfocus;return document.body.onfocus=function(){s&&s.apply(this,arguments),document.body.onfocus=s,setTimeout(function(){a.val()||n.reject("Cancelled")}.bind(this),500)},a.click(),n.always(function(){a.remove()}),n}}),define("commands/updbatch",["cmdr","jquery","services/releaseBatches","utils/imagePrompt"],function(e,t,n,i){return new e.Definition({name:"UPDBATCH",description:"Updates basic settings for a release batch.",usage:"UPDBATCH batchIdOrName [--name newName] [--description newDescription] [--logo-file|--logo-reset]",main:function(e){function a(e,t){var n=l.indexOf(e);if(n>=0){if(t)return!0;if(n+1 in l)return l[n+1];throw"Invalid arguments"}return null}if(!e)return void this.shell.writeLine("Project batch id or name required","error");var s,r,o,c,l=this.parsed.args.slice(1);try{s=a("--name"),r=a("--description"),o=a("--logo-file",!0),c=a("--logo-reset",!0)}catch(e){return void this.shell.writeLine(e,"error")}var d=[];return(s||r)&&d.push(n.putReleaseBatch(e,{name:s,description:r}).then(function(){this.shell.writeLine("Batch name and/or description updated","success")}.bind(this)).fail(this.fail.bind(this))),c?d.push(n.putReleaseBatchLogo(e,null).then(function(){this.shell.writeLine("Batch logo reset","success")}.bind(this)).fail(this.fail.bind(this))):o&&d.push(i().then(function(t){return n.putReleaseBatchLogo(e,t).then(function(){this.shell.writeLine("Batch logo set","success")}.bind(this))}.bind(this)).fail(this.fail.bind(this))),t.when.apply(t,d)},autocompleteKeys:["releaseBatches"]})}),define("commands/rmbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RMBATCH",description:"Deletes a release batch by id.",usage:"RMBATCH batchIdOrName",main:function(e){if(!e)return void this.shell.writeLine("Project batch id or name required","error");var n=this.defer();return this.shell.write("Are you sure you want to delete this release batch (y/n)? ","warning"),this.shell.readLine(function(i){return"y"!==i.toLowerCase()?void n.resolve():void t.deleteReleaseBatch(e).then(function(){this.shell.writeLine("Release batch deleted","success"),n.resolve()}.bind(this)).fail(function(e,t,i){this.fail(e,t,i),n.resolve()}.bind(this))}.bind(this)),n},autocompleteKeys:["releaseBatches"]})}),define("commands/copybatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"COPYBATCH",description:"Copies a release batch.",usage:"COPYBATCH idOrName copyName",main:function(e,n){return e&&n?t.copyReleaseBatch(e,n).then(function(e){this.shell.writeLine("Batch copied","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch name or id, and copy name required","error")},autocompleteKeys:["releaseBatches"]})}),define("commands/linkproj",["cmdr","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"LINKPROJ",description:"Links an Octopus project to a release batch and optionally sets the associated release number.",usage:"LINKPROJ batchIdOrName projectIdOrSlugOrName [releaseVersion]\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n,i){return e&&n?t.linkProject(e,n,i).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and project id or slug or name required","error")},autocompleteKeys:["releaseBatches","projects"]})}),define("commands/unlinkproj",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UNLINKPROJ",description:"Unlinks an Octopus project from a release batch.",usage:"UNLINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){return e&&n?t.unlinkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and project id or slug or name required","error")},autocompleteKeys:["releaseBatches","projects"]})}),define("commands/syncbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"SYNCBATCH",description:"Syncs up a release batch with releases from Octopus.",usage:"SYNCBATCH batchIdOrName [environmentIdOrName]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n){return e?t.syncReleaseBatch(e,n).then(function(e){return this.shell.writeLine("Release batch synced","success"),e}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name required","error")},autocompleteKeys:["releaseBatches","environments"]})}),define("commands/deploybatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"DEPLOYBATCH",description:"Deploys all items in a release batch.",usage:"DEPLOYBATCH batchIdOrName environmentIdOrName [--force]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n,i){return e&&n?t.deployReleaseBatch(e,n,"--force"===i).then(function(e){return e.successfulItems.length?(this.shell.writeLine(),this.shell.writeLine("                $$$$$$$"),this.shell.writeLine("            $$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$O$$$$$    $$$$$$"),this.shell.writeLine("       $$$$$$$$O$$$$$$$$$$$$   $$$  $$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$$$$$$  $$$$    $$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine(" $$$$$$     $$$$$$$$$$$$$$$$$$        $$"),this.shell.writeLine("$$   $$$$$$$$$$$$$$$$$$$$$$$         $$"),this.shell.writeLine(" $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("     $$$$$$$$  $$$ $$$$$$          $$"),this.shell.writeLine("   $$$$       $$$  $$$ $$$      $$$$"),this.shell.writeLine("  $$$       $$$$   $$$  $$$"),this.shell.writeLine("   $$$$$   $$$     $$$   $$$$    $$"),this.shell.writeLine("    $$$    $$$$$$  $$$    $$$$$$$$"),this.shell.writeLine("            $$$     $$$$$   $$$$"),this.shell.writeLine(),this.shell.writeLine("         RELEASE THE KRAKEN!"),this.shell.writeLine(),this.shell.writeLine("Deployments for the following projects were created:"),e.successfulItems.forEach(function(e){this.shell.writeLine(e.name,"success")}.bind(this))):this.shell.writeLine("No deployments created"),e.failedItems.length&&(this.shell.writeLine(),this.shell.writeLine("Deployments for the following projects were not created because an error occured while attempting to create them:"),e.failedItems.forEach(function(e){this.shell.writeLine(e.name+": "+e.message,"error")}.bind(this))),e}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Batch id or name and environment id or name required","error")},autocompleteKeys:["releaseBatches","environments"]})}),define("commands/nubatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"NUBATCH",description:"Makes a new release for every project in a batch from the latest nuget packages.",usage:"NUBATCH batchIdOrName [version]",main:function(e,n){if(!e)return void this.shell.writeLine("Batch id or name required","error");var i=this.defer(),a=[],s=[],r=function(n){this.shell.write("Could not determine a version for project '"+n.projectId+"'. Please enter a release version: "),this.shell.readLine(function(o){return n.version=o,a.push(n),s.length?void r(s.pop()):t.createReleases(e,a).then(function(e){this.shell.writeLine("Releases created and batch synced with latest","success"),i.resolve()}.bind(this)).fail(this.fail.bind(this))}.bind(this))}.bind(this),o=function(e){if(e.length){var t=e.pop();t.version?a.push(t):s.push(t),o(e)}};return t.previewReleases(e).then(function(n){o(n),s.length?r(s.pop()):t.createReleases(e,a).then(function(e){this.shell.writeLine("Releases created and batch synced with latest","success"),i.resolve()}.bind(this)).fail(this.fail.bind(this))}.bind(this)).fail(this.fail.bind(this)),i},autocompleteKeys:["releaseBatches"]})}),define("commands/progress",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"PROGRESS",description:"Gets the deplyoment progress from Octopus for all projects in a release batch.",usage:"PROGRESS idOrName",main:function(e){return e?t.getProgression(e).then(function(t){return this.shell.writeLine("Progression for batch "+e),this.shell.writeLine(),this.shell.writeTable(t,["projectId:20:project id","environmentId:20:environment","releaseVersion:20:release version","state:*:state"],!0),t}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch id or name required","error")},autocompleteKeys:["releaseBatches"]})}),define("commands/lockbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"LOCKBATCH",description:"Locks a release batch. If a batch is locked, no modifications can be made.",usage:"LOCKBATCH idOrName [comment]",main:function(e,n){return e?t.lockReleaseBatch(e,n).then(function(e){this.shell.writeLine("Batch has been locked.","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch id or name required","error")},autocompleteKeys:["releaseBatches"]})}),define("commands/unlockbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UNLOCKBATCH",description:"Unlocks a release batch.",usage:"UNLOCKBATCH idOrName",main:function(e){return e?t.unlockReleaseBatch(e).then(function(e){this.shell.writeLine("Batch has been unlocked.","success")}.bind(this)).fail(this.fail.bind(this)):void this.shell.writeLine("Project batch id or name required","error")},autocompleteKeys:["releaseBatches"]})}),define("commands/logout",["cmdr","context"],function(e,t){return new e.Definition({name:"LOGOUT",description:"Logout of Kraken.",main:function(){var e=this.defer();return this.shell.write("Are you sure you want to logout of Kraken? ","warning"),this.shell.readLine(function(n){return"y"!==n.toLowerCase()?void e.resolve():(document.location=t.basePath+"logout",void e.resolve())}.bind(this)),e}})}),define("commands/definitionProvider",["cmdr","commands/env","commands/proj","commands/batch","commands/mkbatch","commands/updbatch","commands/rmbatch","commands/copybatch","commands/linkproj","commands/unlinkproj","commands/syncbatch","commands/deploybatch","commands/nubatch","commands/progress","commands/lockbatch","commands/unlockbatch","commands/logout"],function(e){for(var t=new e.DefinitionProvider,n=1,i=arguments.length;n<i;n++)t.addDefinition(arguments[n]);return t}),define("commands/autocompleteProvider",["cmdr","bus","commands/definitionProvider","services/releaseBatches","services/projects","services/environments"],function(e,t,n,i,a,s){function r(e,t){if(!t.parsed.name)return!1;var i=n.getDefinitions(t.parsed.name);if(1!==i.length)return!1;var a=i[0].autocompleteKeys;return!!a&&a[t.parsed.args.length]===e}function o(e){return e.map(function(e){var t=e.name;return t.indexOf(" ")>-1&&(t='"'+t+'"'),t})}function c(e){return r("releaseBatches",e)?(u||(u=i.getReleaseBatches().then(o)),u):null}function l(){u=null}function d(e){return r("projects",e)?(p||(p=a.getProjects().then(o)),p):null}function h(e){return r("environments",e)?(m||(m=s.getEnvironments().then(o)),m):null}var u=null;t.subscribe("releasebatches:add",l),t.subscribe("releasebatches:update",l),t.subscribe("releasebatches:delete",l);var p=null,m=null,b=new e.AutocompleteProvider;return b.lookups.push(c),b.lookups.push(d),b.lookups.push(h),b}),define("commands/commandHandler",["cmdr"],function(e){return new e.CommandHandler({contextExtensions:{fail:function(e,t,n){"string"==typeof e&&(n=e),n&&this.shell.writeLine(n,"error"),e.responseText&&this.shell.writeLine(e.responseText,"error"),this.shell.writeLine("Operation Failed","error")}}})}),define("shell",["cmdr","commands/definitionProvider","commands/autocompleteProvider","commands/commandHandler"],function(e,t,n,i){var a=new e.OverlayShell({definitionProvider:t,autocompleteProvider:n,commandHandler:i});return a.writeLine("Welcome to the Kraken console!"),a.writeLine(),a.echo=!1,a.execute("help"),a.echo=!0,a.writeLine("* Press (Tab) key to autocomplete commands or arguments."),a.writeLine("* Press (`/~) key to open the console."),a.writeLine("* Press (Esc) key to close the console."),a}),define("utils/koBindingHandlers",["knockout","jquery","bootstrap"],function(e,t,n){e.bindingHandlers.modal={init:function(n,i){t(n).modal({show:!1});var a=i();e.isObservable(a)&&t(n).on("hide.bs.modal",function(){a(!1)})},update:function(n,i){var a=i();e.utils.unwrapObservable(a)?t(n).modal("show"):t(n).modal("hide")}}}),requirejs.config({paths:{html:"../html",jquery:["//ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min","../lib/jquery/dist/jquery.min"],knockout:["//ajax.aspnetcdn.com/ajax/knockout/knockout-3.4.0","../lib/knockout/dist/knockout"],bootstrap:["//ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/bootstrap.min","../lib/bootstrap/dist/js/bootstrap.min"],cmdr:"../lib/cmdrjs/dist/cmdr.min",moment:"../lib/moment/min/moment.min",select2:"../lib/select2/dist/js/select2",koselect2:"../lib/knockout-select2v4/dist/knockout-select2",text:"../lib/text/text",underscore:"../lib/underscore/underscore"},shim:{underscore:{exports:"_"},bootstrap:{deps:["jquery"]}}}),define("context",window.appContext),requirejs(["knockout","componentLoader","shell","utils/koBindingHandlers"],function(e){e.applyBindings()}),define("app",function(){}),define("text",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),define("text!html/views/releasebatches/details.html",[],function(){return'<div class="view" data-bind="with: releaseBatch">\r\n    <header class="view__header page-header">\r\n        <div class="pull-right">\r\n            <button type="button" class="btn btn-default" data-bind="click: $parent.manage"><span class="glyphicon glyphicon-console"></span> Manage</button>\r\n\r\n            <div class="btn-group">\r\n                <button data-bind="disable: isLocked" type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    <span class="glyphicon glyphicon-refresh"></span> Sync <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu pull-right">\r\n                    <!-- ko foreach: $parent.viewEnvironments -->\r\n                    <li><a href="#" data-bind="text: name, click: $component.syncEnvironment"></a></li>\r\n                    <!-- /ko -->\r\n                    <li role="separator" class="divider"></li>\r\n                    <li><a href="#" data-bind="click: $component.syncReleases">Latest releases</a></li>\r\n                    <li><a href="#" data-bind="click: $component.syncPackages">Latest NuGet packages</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class="btn-group">\r\n                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    <span class="glyphicon glyphicon-cloud-upload"></span> Deploy <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu pull-right" data-bind="foreach: $parent.deployEnvironments">\r\n                    <li><a href="#" data-bind="text: name, click: $component.deploy"></a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <img class="pull-left batch-logo" data-bind="attr: { src: logoUrl }" />\r\n            <h2 data-bind="text: name"></h2>\r\n            <!-- ko if: isLocked -->\r\n            <span data-bind="if: isLocked">\r\n                <span class="glyphicon glyphicon-lock"></span>\r\n                <span data-bind="text: $parent.getLockInfo(lockUserName, lockComment)"></span>\r\n            </span>\r\n            <!-- /ko -->\r\n        </div>\r\n    </header>\r\n\r\n    <div class="view__body">\r\n        <table class="table table-bordered batch-table">\r\n            <thead>\r\n                <tr>\r\n                    <th>Project</th>\r\n                    <th>Release</th>\r\n                    <!-- ko foreach: $parent.viewEnvironments -->\r\n                    <th data-bind="text: name"></th>\r\n                    <!-- /ko -->\r\n                </tr>\r\n            </thead>\r\n            <tbody data-bind="foreach: { data: items, as: \'batchItem\' }">\r\n                <tr>\r\n                    <td class="project-name">\r\n                        <a target="_blank" data-bind="text: projectName, attr: { href: $parents[1].getProjectUrl(batchItem) }"></a>\r\n                    </td>\r\n                    <td class="release-version">\r\n                        <a target="_blank" data-bind="text: releaseVersion, attr: { href: $parents[1].getReleaseUrl(batchItem) }"></a>\r\n                    </td>\r\n                    <!-- ko foreach: { data: $component.viewEnvironments, as: \'environment\' } -->\r\n                    <td>\r\n                        <!-- ko with: $component.getProgressDataFromProgression(batchItem, environment) -->\r\n                        <a class="deployment-square" target="_blank" data-bind="if: $data, attr: { href: $component.getDeploymentUrl(batchItem, environment) }">\r\n                            <!-- ko with: $component.getProgressState($data) -->\r\n                            <span class="status" data-bind="css: { \'status--success\': $data === \'success\', \'status--failed\': $data === \'failed\', \'status--executing\': $data === \'executing\' }">\r\n                                <i class="fa" data-bind="css: { \'fa-check\': $data === \'success\', \'fa-exclamation-triangle\': $data === \'failed\', \'fa-spinner fa-spin\': $data === \'executing\' }"></i>\r\n                            </span>\r\n                            <!-- /ko -->\r\n                            <span class="deployment-square-info">\r\n                                <span class="version" data-bind="text: $data.releaseVersion"></span>\r\n                                <span class="release-date" data-bind="text: $component.formatDate($data.completedTime)"></span>\r\n                            </span>\r\n                        </a>\r\n                        <!-- /ko -->\r\n                    </td>\r\n                    <!-- /ko -->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div class="container sub-container">\r\n            <div class="col col-lg-6">\r\n                <div class="input-group input-group select2-bootstrap-append">\r\n                    <select class="form-control" data-bind="disable: isLocked, value: $parent.selectedProject, select2: $parent.projectsSelect2Options"></select>\r\n                    <span class="input-group-btn">\r\n                        <button type="button" class="btn btn-primary" aria-haspopup="true" aria-expanded="false" data-bind="enable: $parent.selectedProject, click: $component.linkProject">\r\n                            <span class="glyphicon glyphicon-plus"></span>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class="col col-lg-6">\r\n                <div class="audit-info">\r\n                    <p data-bind="visible: updateDateTime, text: $parent.getAuditInfo(\'updated\', updateUserName, updateDateTime)"></p>\r\n                    <p data-bind="visible: syncDateTime, text: $parent.getAuditInfo(\'synced\', syncUserName, syncDateTime, syncEnvironmentName)"></p>\r\n                    <p data-bind="visible: deployDateTime, text: $parent.getAuditInfo(\'deployed\',deployUserName, deployDateTime, deployEnvironmentName)"></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <footer class="view__footer">\r\n        <p data-bind="text: description"></p>\r\n    </footer>\r\n\r\n</div>\r\n'}),define("text!html/views/releasebatches/index.html",[],function(){return'<div class="view">\r\n    <header class="view__header page-header">\r\n\r\n        <div class="pull-right">\r\n            <button type="button" class="btn btn-default" data-bind="click: manage"><span class="glyphicon glyphicon-console"></span> Manage</button>\r\n            <button type="button" class="btn btn-primary" data-bind="click: function() { showAddBatchModal(true); }"><span class="glyphicon glyphicon-plus"></span> Add batch</button>\r\n        </div>\r\n\r\n        <h2>Release Batches</h2>\r\n    </header>\r\n    <section class="view__body">\r\n        <ul class="batch-list" data-bind="foreach: releaseBatches">\r\n            <li class="batch-list__item">\r\n                <a data-bind="attr: { href: detailsUrl }">\r\n                    <img data-bind="attr: { src: logoUrl, alt: name }" />\r\n                    <span data-bind="text: name"></span>\r\n                    <p data-bind="text: description"></p>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </section>\r\n</div>\r\n\r\n<div class="modal fade" tabindex="-1" role="dialog" data-bind="modal: showAddBatchModal">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Add batch</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form class="form-horizontal" data-bind="submit: addBatchModal.addBatch">\r\n                    <div class="form-group" data-bind="css: { \'has-error has-feedback\': addBatchModal.invalid }">\r\n                        <label class="col-sm-2 control-label" for="batchName">Name</label>\r\n                        <div class="col-sm-10">\r\n                            <input class="form-control" type="text" id="batchName" data-bind="value: addBatchModal.batchName" />\r\n                            <!-- ko if: addBatchModal.invalid-->\r\n                            <span class="glyphicon glyphicon-remove form-control-feedback"></span>\r\n                            <!-- /ko -->\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-bind="click : addBatchModal.addBatch">Add</button>\r\n                <button type="button" class="btn btn-link" data-bind="click : addBatchModal.closeModal">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'}),define("utils/koAsyncExtender",["knockout","jquery"],function(e,t){e.extenders.async=function(n,i){var a,s=e.observable(i);return s.working=e.observable(!1),e.computed(function(){a&&(a.reject(),a=null);var e=n();e&&"function"==typeof e.done?(s.working(!0),a=t.Deferred().done(function(e){s.working(!1),s(e)}),e.done(a.resolve)):s(e)}),s}}),define("services/users",["jquery","context"],function(e,t){return{getUser:function(n){return e.get(t.basePath+"api/users/"+n)}}}),define("views/releasebatches/details",["knockout","bootstrap","select2","koselect2","moment","underscore","utils/koAsyncExtender","shell","bus","services/releaseBatches","services/environments","services/projects","services/users","context"],function(e,t,n,i,a,s,r,o,c,l,d,h,u,p){return function(t){function n(t){return t?(h.hasOwnProperty(t)||(h[t]=e.computed(function(){return u.getUser(t).then(function(e){return e.displayName||e.userName})}).extend({async:t})),h[t]()):null}var i,r;this.viewEnvironments=e.observableArray(),this.deployEnvironments=e.observableArray(),this.progress=e.observable(),this.selectedProject=e.observable(),this.releaseBatch=e.observable(),this.releaseBatch.subscribe(function(e){e.items.length&&this.checkProgress()}.bind(this));var d=this.releaseBatch;
this.projectsSelect2Options=e.observable({width:"off",placeholder:"Link project...",ajax:{url:p.basePath+"api/projects",data:function(e){return{nameFilter:e.term}},dataType:"json",processResults:function(e){return e=$.map(e,function(e){return e.text=e.text||e.name,e}),{results:e}},minimumInputLength:1},theme:"bootstrap"}),this.loadReleaseBatch=function(){l.getReleaseBatch(t.id).then(function(e){e.logoUrl=p.basePath+"api/releasebatches/"+e.id+"/logo?cb="+new Date(e.updateDateTime).getTime(),this.releaseBatch(e)}.bind(this))}.bind(this),this.loadEnvironments=function(){l.getBatchEnvironments(t.id).then(function(e){this.deployEnvironments(e.deploy),this.viewEnvironments(e.view)}.bind(this))}.bind(this),this.deploy=function(e){o.open(),o.execute("DEPLOYBATCH",t.id,e.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncEnvironment=function(e){o.open(),o.execute("SYNCBATCH",t.id,e.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncReleases=function(){o.open(),o.execute("SYNCBATCH",t.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncPackages=function(){o.open(),o.execute("NUBATCH",t.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.linkProject=function(){o.execute("LINKPROJ",t.id,this.selectedProject()).then(function(){this.loadReleaseBatch(),this.loadEnvironments()}.bind(this),function(){o.open()}.bind(this))}.bind(this),this.checkProgress=function(){clearTimeout(i),r&&r.abort(),r=l.getProgression(t.id).done(function(e){this.progress(e),i=setTimeout(function(){this.checkProgress()}.bind(this),5e3)}.bind(this))}.bind(this);var h={};this.getAuditInfo=function(e,t,i,s){var r="";return r+="Last "+e,s&&(r+=" to "+s),r+=" by "+n(t),r+=" at "+a(i).format("l LTS")}.bind(this),this.getLockInfo=function(e,t){var i="";return i+="Locked by "+n(e),t&&(i+=" ("+t+")"),i}.bind(this),this.getProjectUrl=function(e){return p.octopusServerAddress+"/app#/projects/"+e.projectSlug}.bind(this),this.getReleaseUrl=function(e){return this.getProjectUrl(e)+"/releases/"+e.releaseVersion}.bind(this),this.getDeploymentUrl=function(e,t){var n=this.getProgressDataFromProgression(e,t);if(n)return this.getProjectUrl(e)+"/releases/"+n.releaseId+"/deployments/"+n.deploymentId},this.getProgressState=function(e){var t=e.state;return"Success"===t?"success":"Canceled"===t||"Failed"===t||"TimedOut"===t?"failed":"executing"},this.formatDate=function(e){if(e)return a(e).format("l LTS")},this.getProgressDataFromProgression=function(e,t){if(this.progress()){var n=s.find(this.progress(),function(n){return n.projectId===e.projectId&&n.environmentId===t.id});return n}}.bind(this),this.manage=function(){o.open()}.bind(this),c.subscribe("releasebatches:update",function(e){d().id!==e&&String(d().id)!==e&&d().name!==e||(this.loadReleaseBatch(),this.loadEnvironments())}.bind(this)),c.subscribe("releasebatches:delete",function(e){d().id!==e&&String(d().id)!==e&&d().name!==e||(document.location=p.basePath+"app")}.bind(this)),this.loadReleaseBatch(),this.loadEnvironments()}}),define("views/releasebatches/index",["knockout","shell","bus","services/releaseBatches","context"],function(e,t,n,i,a){return function(s){this.releaseBatches=e.observableArray(),this.showAddBatchModal=e.observable(!1);var r=this.showAddBatchModal;this.addBatchModal={invalid:e.observable(!1),batchName:e.observable(""),addBatch:function(){return this.addBatchModal.invalid()||!this.addBatchModal.batchName()?void this.addBatchModal.invalid(!0):(t.open(),t.execute("MKBATCH",this.addBatchModal.batchName()),void this.addBatchModal.closeModal())},closeModal:function(){this.addBatchModal.invalid(!1),this.addBatchModal.batchName(""),r(!1)}},this.manage=function(){t.open()}.bind(this);var o=function(e){return e.detailsUrl=a.basePath+"app/releasebatches/details?id="+e.id,e.logoUrl=a.basePath+"api/releasebatches/"+e.id+"/logo?cb="+new Date(e.updateDateTime).getTime(),e},c=function(){i.getReleaseBatches().then(function(e){this.releaseBatches($.map(e,o))}.bind(this))}.bind(this);n.subscribe("releasebatches:add",c),n.subscribe("releasebatches:update",c),n.subscribe("releasebatches:delete",c),c()}})}();