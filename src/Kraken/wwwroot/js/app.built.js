(function(){define("componentLoader",["knockout"],function(e){e.components.loaders.unshift({getConfig:function(e,t){t({viewModel:{require:e},template:{require:"text!html/"+e+".html"}})},loadTemplate:function(t,n,r){n.require?require([n.require],function(n){e.components.defaultLoader.loadViewModel(t,n,r)}):r(null)},loadViewModel:function(t,n,r){n.require?require([n.require],function(n){e.components.defaultLoader.loadTemplate(t,n,r)}):r(null)}})}),define("services/environments",["jquery","context"],function(e,t){return{getEnvironments:function(){return e.get(t.basePath+"api/environments")}}}),define("commands/env",["cmdr","services/environments"],function(e,t){return new e.Definition({name:"ENV",description:"Lists all Octopus environments.",main:function(){return t.getEnvironments().then(function(e){this.shell.writeLine("Octopus environments:"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),define("services/projects",["jquery","context"],function(e,t){return{getProjects:function(n){return e.get(t.basePath+"api/projects",{nameFilter:n})}}}),define("commands/proj",["cmdr","services/projects"],function(e,t){return new e.Definition({name:"PROJ",description:"List Octopus projects, optionally filtered by name.",usage:"PROJ [nameFilter]",main:function(e){return t.getProjects(e).then(function(e){this.shell.writeLine("Octopus projects"),this.shell.writeLine(),this.shell.writeTable(e,["id:20","slug:50","name:*"],!0)}.bind(this)).fail(this.fail.bind(this))}})}),define("bus",[],function(){return{topics:{},subscribe:function(e,t){this.topics[e]||(this.topics[e]=[]),this.topics[e].push(t)},unsubscribe:function(e,t){if(!this.topics[e])return;var n=this.topics[e].indexOf(t);n!==-1&&this.topics[e].splice(n,1)},publish:function(e,t){if(!this.topics[e]||this.topics[e].length<1)return;this.topics[e].forEach(function(e){e(t||{})})}}}),define("services/releaseBatches",["jquery","bus","context"],function(e,t,n){return{getReleaseBatches:function(){return e.get(n.basePath+"api/releasebatches")},getReleaseBatch:function(t){return e.get(n.basePath+"api/releasebatches/"+encodeURI(t))},postReleaseBatch:function(r){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches",data:JSON.stringify(r),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:add",e.id),e})},putReleaseBatch:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r),data:JSON.stringify(i),contentType:"application/json"}).then(function(e){return t.publish("releasebatches:update",r),e})},deleteReleaseBatch:function(r){return e.ajax({url:n.basePath+"api/releasebatches/"+encodeURI(r),type:"DELETE"}).then(function(e){return t.publish("releasebatches:delete",r),e})},linkProject:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/linkproject",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",r)})},unlinkProject:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/unlinkproject",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:update",r)})},syncReleaseBatch:function(r,i){return e.ajax({type:"PUT",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/sync",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",r)})},deployReleaseBatch:function(r,i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/deploy",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:deploy",r)})},createReleases:function(r,i){return e.ajax({type:"POST",url:n.basePath+"api/releasebatches/"+encodeURI(r)+"/createreleases",data:JSON.stringify(i),contentType:"application/json"}).then(function(){t.publish("releasebatches:sync",r)})},getNextReleases:function(t){return e.ajax({type:"GET",url:n.basePath+"api/releasebatches/"+encodeURI(t)+"/getnextreleases",contentType:"application/json"}).then(function(e){return e})}}}),define("commands/batch",["cmdr","moment","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"BATCH",description:"Lists all release batches or lists all projects linked to a batch.",usage:"BATCH/nBATCH [batchIdOrName]",main:function(e){return e?n.getReleaseBatch(e).then(function(e){this.shell.writeLine(e.name),this.shell.writeLine(e.description),this.shell.writeLine(),this.shell.writeTable(e.items,["projectId:20:project id","projectName:50:project name","releaseVersion:*:release version"],!0),this.shell.writeLine(),e.updateDateTime&&this.shell.writeLine("Last updated by "+e.updateUserName+" at "+t(e.updateDateTime).format("l LTS")),e.syncDateTime&&this.shell.writeLine("Last synced to "+e.syncEnvironmentName+" by "+e.syncUserName+" at "+t(e.syncDateTime).format("l LTS")),e.deployDateTime&&this.shell.writeLine("Last deployed to "+e.deployEnvironmentName+" by "+e.deployUserName+" at "+t(e.deployDateTime).format("l LTS"))}.bind(this)).fail(this.fail.bind(this)):n.getReleaseBatches().then(function(e){this.shell.writeLine("Release batches:"),this.shell.writeLine();var n=e.map(function(e){return e.displaySyncDateTime=e.syncDateTime?t(e.syncDateTime).format("l LTS"):"",e.displayDeployDateTime=e.deployDateTime?t(e.deployDateTime).format("l LTS"):"",e});this.shell.writeTable(n,["id:10","name:30","syncEnvironmentName:15:sync env","displaySyncDateTime:25:sync timestamp","deployEnvironmentName:15:deploy env","displayDeployDateTime:*:deploy timestamp"],!0)}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),define("commands/mkbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"MKBATCH",description:"Creates a new release batch.",usage:"MKBATCH name [description]",main:function(e,n){if(!e){this.shell.writeLine("Project batch name required","error");return}return t.postReleaseBatch({name:e,description:n}).then(function(e){this.shell.writeLine("Batch created","success")}.bind(this)).fail(this.fail.bind(this))}})}),define("commands/updbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UPDBATCH",description:"Updates basic settings for a release batch.",usage:"UPDBATCH batchIdOrName [-name newName] [-description newDescription]",main:function(e){function r(e){var t=n.indexOf(e);if(t>=0){if(t+1 in n)return n[t+1];throw"Invalid arguments"}return"__IGNORE__"}if(!e){this.shell.writeLine("Project batch id or name required","error");return}var n=this.parsed.args.slice(1),i;try{i={name:r("-name"),description:r("-description")}}catch(s){this.shell.writeLine(s,"error");return}return t.putReleaseBatch(e,i).then(function(){this.shell.writeLine("Batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches"]})}),define("commands/rmbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"RMBATCH",description:"Deletes a release batch by id.",usage:"RMBATCH batchIdOrName",main:function(e){if(!e){this.shell.writeLine("Project batch id or name required","error");return}var n=this.defer();return this.shell.write("Are you sure you want to delete this release batch (y/n)? ","warning"),this.shell.readLine(function(r){if(r.toLowerCase()!=="y"){n.resolve();return}t.deleteReleaseBatch(e).then(function(){this.shell.writeLine("Release batch deleted","success"),n.resolve()}.bind(this)).fail(function(e,t,r){this.fail(e,t,r),n.resolve()}.bind(this))}.bind(this)),n},autocompleteKeys:["releaseBatches"]})}),define("commands/linkproj",["cmdr","services/releaseBatches"],function(e,t,n){return new e.Definition({name:"LINKPROJ",description:"Links an Octopus project to a release batch.",usage:"LINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){if(!e||!n){this.shell.writeLine("Batch id or name and project id or slug or name required","error");return}return t.linkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","projects"]})}),define("commands/unlinkproj",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"UNLINKPROJ",description:"Unlinks an Octopus project from a release batch.",usage:"UNLINKPROJ batchIdOrName projectIdOrSlugOrName\n\nProject id can be full (Projects-123) or short (123)",main:function(e,n){if(!e||!n){this.shell.writeLine("Batch id or name and project id or slug or name required","error");return}return t.unlinkProject(e,n).then(function(){this.shell.writeLine("Release batch updated","success")}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","projects"]})}),define("commands/syncbatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"SYNCBATCH",description:"Syncs up a release batch with releases from Octopus.",usage:"SYNCBATCH batchIdOrName [environmentIdOrName]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n){if(!e){this.shell.writeLine("Batch id or name required","error");return}return t.syncReleaseBatch(e,n).then(function(e){return this.shell.writeLine("Release batch synced","success"),e}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","environments"]})}),define("commands/deploybatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"DEPLOYBATCH",description:"Deploys all items in a release batch.",usage:"DEPLOYBATCH batchIdOrName environmentIdOrName [allowRedeploy]\n\nEnvironment id can be full (Environments-123) or short (123)",main:function(e,n,r){if(!e||!n){this.shell.writeLine("Batch id or name and environment id or name required","error");return}return t.deployReleaseBatch(e,n,!!r).then(function(e){return this.shell.writeLine(),this.shell.writeLine("                $$$$$$$"),this.shell.writeLine("            $$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$O$$$$$    $$$$$$"),this.shell.writeLine("       $$$$$$$$O$$$$$$$$$$$$   $$$  $$$"),this.shell.writeLine("       $$$$$$$$$$$$$$$$$$$$  $$$$    $$"),this.shell.writeLine("        $$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("         $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine(" $$$$$$     $$$$$$$$$$$$$$$$$$        $$"),this.shell.writeLine("$$   $$$$$$$$$$$$$$$$$$$$$$$         $$"),this.shell.writeLine(" $$$    $$$$$$$$$$$$$$$$$$$$$$$$$$$$"),this.shell.writeLine("     $$$$$$$$  $$$ $$$$$$          $$"),this.shell.writeLine("   $$$$       $$$  $$$ $$$      $$$$"),this.shell.writeLine("  $$$       $$$$   $$$  $$$"),this.shell.writeLine("   $$$$$   $$$     $$$   $$$$    $$"),this.shell.writeLine("    $$$    $$$$$$  $$$    $$$$$$$$"),this.shell.writeLine("            $$$     $$$$$   $$$$"),this.shell.writeLine(),this.shell.writeLine("         RELEASE THE KRAKEN!"),this.shell.writeLine(),this.shell.writeLine("Release batch deploys started.  Check Octopus for status.","success"),e}.bind(this)).fail(this.fail.bind(this))},autocompleteKeys:["releaseBatches","environments"]})}),define("commands/nubatch",["cmdr","services/releaseBatches"],function(e,t){return new e.Definition({name:"NUBATCH",description:"Makes a new release for every project in a batch from the latest nuget packages.",usage:"NUBATCH batchIdOrName [version]",main:function(e,n){if(!e){this.shell.writeLine("Batch id or name required","error");return}var r=this.defer(),i=[],s=[],o=function(n){this.shell.write("Could not determine a version for project '"+n.projectId+"'. Please enter a release version: "),this.shell.readLine(function(u){n.version=u,i.push(n);if(!s.length)return t.createReleases(e,i).then(function(e){this.shell.writeLine("Releases created and batch synced with latest","success"),r.resolve()}.bind(this)).fail(this.fail.bind(this));o(s.pop())}.bind(this))}.bind(this),u=function(e){if(!e.length)return;var t=e.pop();t.version?i.push(t):s.push(t),u(e)};return t.getNextReleases(e).then(function(n){u(n),s.length?o(s.pop()):t.createReleases(e,i).then(function(e){this.shell.writeLine("Releases created and batch synced with latest","success"),r.resolve()}.bind(this)).fail(this.fail.bind(this))}.bind(this)).fail(this.fail.bind(this)),r},autocompleteKeys:["releaseBatches"]})}),define("commands/logout",["cmdr","context"],function(e,t){return new e.Definition({name:"LOGOUT",description:"Logout of Kraken.",main:function(){var e=this.defer();return this.shell.write("Are you sure you want to logout of Kraken? ","warning"),this.shell.readLine(function(n){if(n.toLowerCase()!=="y"){e.resolve();return}document.location=t.basePath+"logout",e.resolve()}.bind(this)),e}})}),define("commands/definitionProvider",["cmdr","commands/env","commands/proj","commands/batch","commands/mkbatch","commands/updbatch","commands/rmbatch","commands/linkproj","commands/unlinkproj","commands/syncbatch","commands/deploybatch","commands/nubatch","commands/logout"],function(e){var t=new e.DefinitionProvider;for(var n=1,r=arguments.length;n<r;n++)t.addDefinition(arguments[n]);return t}),define("commands/autocompleteProvider",["cmdr","bus","commands/definitionProvider","services/releaseBatches","services/projects","services/environments"],function(e,t,n,r,i,s){function o(e,t){if(!t.parsed.name)return!1;var r=n.getDefinitions(t.parsed.name);if(r.length!==1)return!1;var i=r[0].autocompleteKeys;return i?i[t.parsed.args.length]===e:!1}function u(e){return e.map(function(e){var t=e.name;return t.indexOf(" ")>-1&&(t='"'+t+'"'),t})}function f(e){return o("releaseBatches",e)?(a||(a=r.getReleaseBatches().then(u)),a):null}function l(){a=null}function h(e){return o("projects",e)?(c||(c=i.getProjects().then(u)),c):null}function d(e){return o("environments",e)?(p||(p=s.getEnvironments().then(u)),p):null}var a=null;t.subscribe("releasebatches:add",l),t.subscribe("releasebatches:update",l),t.subscribe("releasebatches:delete",l);var c=null,p=null,v=new e.AutocompleteProvider;return v.lookups.push(f),v.lookups.push(h),v.lookups.push(d),v}),define("commands/commandHandler",["cmdr"],function(e){return new e.CommandHandler({contextExtensions:{fail:function(e,t,n){n&&this.shell.writeLine(n,"error"),e.responseText&&this.shell.writeLine(e.responseText,"error"),this.shell.writeLine("Operation Failed","error")}}})}),define("shell",["cmdr","commands/definitionProvider","commands/autocompleteProvider","commands/commandHandler"],function(e,t,n,r){var i=new e.OverlayShell({definitionProvider:t,autocompleteProvider:n,commandHandler:r});return i.writeLine("Welcome to the Kraken console!"),i.writeLine(),i.echo=!1,i.execute("help"),i.echo=!0,i.writeLine("* Press (Tab) key to autocomplete commands or arguments."),i.writeLine("* Press (`/~) key to open the console."),i.writeLine("* Press (Esc) key to close the console."),i}),requirejs.config({paths:{html:"../html",jquery:["//ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min","../lib/jquery/dist/jquery.min"],knockout:["//ajax.aspnetcdn.com/ajax/knockout/knockout-3.4.0","../lib/knockout/dist/knockout"],bootstrap:["//ajax.aspnetcdn.com/ajax/bootstrap/3.3.5/bootstrap.min","../lib/bootstrap/dist/js/bootstrap.min"],cmdr:"../lib/cmdrjs/dist/cmdr.min",moment:"../lib/moment/min/moment.min",text:"../lib/text/text"}}),define("context",window.appContext),requirejs(["knockout","componentLoader","shell"],function(e){e.applyBindings()}),define("app",function(){}),define("text",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),define("text!html/views/releasebatches/details.html",[],function(){return'<div class="view" data-bind="with: releaseBatch">\r\n    <header class="view__header page-header">\r\n\r\n        <div class="pull-right">\r\n            <button type="button" class="btn btn-default" data-bind="click: $parent.manage"><span class="glyphicon glyphicon-console"></span> Manage</button>\r\n\r\n            <div class="btn-group">\r\n                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    <span class="glyphicon glyphicon-refresh"></span> Sync <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu pull-right" >                    \r\n                    <!-- ko foreach: $parent.environments -->\r\n                    <li><a href="#" data-bind="text: name, click: $component.syncEnvironment"></a></li>                    \r\n                    <!-- /ko -->\r\n                    <li role="separator" class="divider"></li>\r\n                    <li><a href="#" data-bind="click: $component.syncReleases">Latest releases</a></li>\r\n                    <li><a href="#" data-bind="click: $component.syncPackages">Latest NuGet packages</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class="btn-group">\r\n                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\r\n                    <span class="glyphicon glyphicon-cloud-upload"></span> Deploy <span class="caret"></span>\r\n                </button>\r\n                <ul class="dropdown-menu pull-right" data-bind="foreach: $parent.environments">\r\n                    <li><a href="#" data-bind="text: name, click: $component.deploy"></a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <img class="pull-left batch-logo" data-bind="attr: { src: logoUrl }" />\r\n        <h2 data-bind="text: name"></h2>\r\n    </header>\r\n\r\n    <div class="view__body">\r\n        \r\n        <table class="table table-bordered batch-item-table">\r\n            <thead>\r\n                <tr>\r\n                    <th>Project</th>\r\n                    <th>Release</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody data-bind="foreach: items">\r\n                <tr>\r\n                    <td class="project-name">\r\n                        <a target="_blank" data-bind="text: projectName, attr: { href: $parents[1].getProjectUrl($data) }"></a>\r\n                    </td>\r\n                    <td class="release-version">\r\n                        <a target="_blank" data-bind="text: releaseVersion, attr: { href: $parents[1].getReleaseUrl($data) }"></a>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n                \r\n        <div class="audit-info">\r\n            <p data-bind="visible: updateDateTime, text: $parent.getAuditInfo(\'updated\', updateUserName, updateDateTime)"></p>\r\n            <p data-bind="visible: syncDateTime, text: $parent.getAuditInfo(\'synced\', syncUserName, syncDateTime, syncEnvironmentName)"></p>\r\n            <p data-bind="visible: deployDateTime, text: $parent.getAuditInfo(\'deployed\',deployUserName, deployDateTime, deployEnvironmentName)"></p>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    <footer class="view__footer">\r\n        <p data-bind="text: description"></p>\r\n    </footer>\r\n\r\n</div>\r\n'}),define("text!html/views/releasebatches/index.html",[],function(){return'<div class="view">\n    <header class="view__header page-header">\n\n        <div class="pull-right">\r\n            <button type="button" class="btn btn-default" data-bind="click: manage"><span class="glyphicon glyphicon-console"></span> Manage</button>\r\n        </div>\n\n        <h2>Release Batches</h2>\n    </header>\n    <section class="view__body">\n        <ul class="batch-list" data-bind="foreach: releaseBatches">\n            <li class="batch-list__item"> \n                <a data-bind="attr: { href: detailsUrl }">\r\n                    <img data-bind="attr: { src: logoUrl, alt: name }" />\r\n                    <span data-bind="text: name"></span>\r\n                    <p data-bind="text: description"></p>\r\n                </a>\n            </li>\n        </ul>\n    </section>\n</div>'}),define("views/releasebatches/details",["knockout","bootstrap","moment","shell","bus","services/releaseBatches","services/environments","context"],function(e,t,n,r,i,s,o,u){return function(t){this.environments=e.observableArray(),this.releaseBatch=e.observable();var a=this.releaseBatch;this.loadReleaseBatch=function(){s.getReleaseBatch(t.id).then(function(e){e.logoUrl=u.basePath+"images/batch-logo.png",this.releaseBatch(e)}.bind(this))}.bind(this),this.loadEnvironments=function(){o.getEnvironments().then(function(e){this.environments(e)}.bind(this))}.bind(this),this.deploy=function(e){r.open(),r.execute("DEPLOYBATCH",t.id,e.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncEnvironment=function(e){r.open(),r.execute("SYNCBATCH",t.id,e.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncReleases=function(){r.open(),r.execute("SYNCBATCH",t.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.syncPackages=function(){r.open(),r.execute("NUBATCH",t.id).then(function(){this.loadReleaseBatch()}.bind(this))}.bind(this),this.getAuditInfo=function(e,t,r,i){var s="";return s+="Last "+e,i&&(s+=" to "+i),s+=" by "+t,s+=" at "+n(r).format("l LTS"),s}.bind(this),this.getProjectUrl=function(e){return u.octopusServerAddress+"/app#/projects/"+e.projectSlug}.bind(this),this.getReleaseUrl=function(e){return this.getProjectUrl(e)+"/releases/"+e.releaseVersion}.bind(this),this.manage=function(){r.open()}.bind(this),i.subscribe("releasebatches:update",function(e){(a().id===e||a().name===e)&&this.loadReleaseBatch()}.bind(this)),i.subscribe("releasebatches:delete",function(e){if(a().id===e||a().name===e)document.location=u.basePath+"app"}.bind(this)),this.loadReleaseBatch(),this.loadEnvironments()}}),define("views/releasebatches/index",["knockout","shell","bus","services/releaseBatches","context"],function(e,t,n,r,i){return function(s){this.releaseBatches=e.observableArray(),this.manage=function(){t.open()}.bind(this);var o=function(e){return e.detailsUrl=i.basePath+"app/releasebatches/details?id="+e.id,e.logoUrl=i.basePath+"images/batch-logo.png",e},u=function(){r.getReleaseBatches().then(function(e){this.releaseBatches($.map(e,o))}.bind(this))}.bind(this);n.subscribe("releasebatches:add",u),n.subscribe("releasebatches:update",u),n.subscribe("releasebatches:delete",u),u()}})})();